<configuration scan="false" scanPeriod="60 seconds" debug="false">
    <!--定义日志的根目录-->
    <property name="LOG_HOME" value="F:\log" />
    <!--定义日志文件的名称-->
    <property name="appName" value="aitraffic" />
    <!--控制台输出-->
    <appender name="StdoutAppender" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <!--开发环境下的输出格式-->
            <springProfile name="dev">
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} %msg%n</pattern>
            </springProfile>
            <!--非开发环境下的输出格式-->
            <springProfile name="!dev">
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} == [%thread] == %-5level == %logger{50} == %msg%n</pattern>
            </springProfile>
        </layout>
    </appender>

    <!--滚动记录文件, 先将日志记录到指定文件, 当符合某个条件时, 将日志记录到其它文件-->
    <appender name="FileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 在第一次触发滚动之前记录将会写到该文件中 -->
        <file>${LOG_HOME}/rolling.log</file>
        <!--
            前提条件：class的值为FixedWindowRollingPolicy，表示以最小窗体为指定的滚动规则
            RollingPolicy标签必须子标签：<fileNamePattern>、<minIndex>、<maxIndex>
            <fileNamePattern>:表示滚动条件达到后，创建文件名的规则，其中"%i"代表数字1~5。第一次触发条件，创建文件rolling1.log，并且记录开始写到这个文件中
             <minIndex>与<maxIndex>共同决定了文件的个数
         -->
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${LOG_HOME}/rolling%i.log</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>5</maxIndex>
        </rollingPolicy>
        <!--
            <triggeringPolicy>功能：用于限制文件大小
            前提条件：class的值为SizeBasedTriggeringPolicy，表示以文件大小为触发条件
            只有一个子标签<maxFileSize>用于指定触发条件
         -->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>20MB</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <!--开发环境下的输出格式-->
            <springProfile name="dev">
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} %msg%n</pattern>
            </springProfile>
            <!--非开发环境下的输出格式-->
            <springProfile name="!dev">
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} == [%thread] == %-5level == %logger{50} == %msg%n</pattern>
            </springProfile>
        </encoder>
    </appender>

    <!-- level属性：指定logger记录日志的最低级别 -->
    <root level="info">
        <!-- ref属性：指定根logger关联的appender -->
        <appender-ref ref="StdoutAppender" />
        <appender-ref ref="FileAppender" />
    </root>
</configuration>